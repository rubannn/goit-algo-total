# У багатьох мовах програмування ми маємо справу з виразами, виділеними символами-розділювачами,
# такими як круглі ( ), квадратні [ ] або фігурні дужки { }.

# Напишіть програму, яка читає рядок з послідовністю символів-розділювачів, наприклад, ( ) { [ ] ( ) ( ) { } } },
# і надає відповідне повідомлення, коли розділювачі симетричні, несиметричні, наприклад ( ( ( ) ,
# або коли розділювачі різних видів стоять у парі, як-от ( }.

# Приклад
# ( ){[ 1 ]( 1 + 3 )( ){ }}: Симетрично
# ( 23 ( 2 - 3);: Несиметрично
# ( 11 }: Несиметрично


def check_brackets(s):
    """Перевіряє симетрію дужок у рядку."""
    stack = []
    pairs = {"(": ")", "[": "]", "{": "}"}

    for c in s:
        if c in pairs:
            stack.append(c)
        elif c in pairs.values():
            if not stack or c != pairs[stack[-1]]:
                return "Несиметрично"
            stack.pop()

    return "Симетрично" if not stack else "Несиметрично"


tests = [
    "( ){[ 1 ]( 1 + 3 )( ){ }}",
    "( 23 ( 2 - 3);",
    "( 11 }",
    "{(1)[(2 [3] 4) (5)] }",
]

for s in tests:
    print(f"'{s}' — {check_brackets(s)}")
